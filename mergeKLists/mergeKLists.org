#+TITLE:23. 合并K个排序链表
* 题目描述
合并 =k= 个排序链表，返回合并后的排序链表。请分析和描述算法的复杂度。

示例:

#+begin_example
输入:
[
 1->4->5,
 1->3->4,
 2->6
]
输出: 1->1->2->3->4->4->5->6

#+end_example


* 题解

** 方法 1：暴力

*** 思路

 1. 遍历所有链表，将所有节点的值放到一个数组中。
 2. 将这个数组排序，然后遍历所有元素得到正确顺序的值。
 3. 用遍历得到的值，创建一个新的有序链表。
 4. 关于排序，你可以参考 这里 获得更多关于排序算法的内容。
 5.
**** java
#+BEGIN_SRC java
  class Solution {
      public ListNode mergeKLists(ListNode[] lists) {
          ListNode result = new ListNode(0);
          ListNode current = result;
          List<Integer> list = new ArrayList<>();
          for (ListNode node : lists) {
              while (node != null) {
                  list.add(node.val);
                  node = node.next;
              }
          }

          Collections.sort(list);
          for (int i : list) {
              current.next = new ListNode(i);
              current = current.next;
          }
          return result.next;
      }
  }

  #+END_SRC

*** 复杂度分析

时间复杂度：O(nlogn) ，其中 n 是节点的总数目。

遍历所有的值需花费 O(n) 的时间。
一个稳定的排序算法花费 O(nlog n) 的时间。
遍历同时创建新的有序链表花费 O(n) 的时间。


空间复杂度：O(n) 。

排序花费 O(n) 空间（这取决于你选择的算法）。
创建一个新的链表花费 O(n) 的空间。
